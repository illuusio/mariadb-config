---
name: Test configuration on system MariaDB

on:
  workflow_call:
    inputs:
      container:
        required: true
        type: string
      mariadb_server:
        required: true
        type: string

jobs:
  test-mariadb:
    runs-on: ubuntu-latest
    container: ${{ inputs.container }}

    env:
      DEBIAN_FRONTEND: noninteractive
      TZ: Etc/GMT

    steps:
      - uses: actions/checkout@v4
      - name: Link correct timezone to '/etc/localtime'
        run: ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone
      - name: Enable automatic restarts from maint scripts
        run: sed -i "s/101/0/g" -i /usr/sbin/policy-rc.d
      - name: Fake /sbin/runlevel to avoid warnings of could not determine current runlevel
        run: echo -e '#!/bin/sh\necho "N 5"' > /sbin/runlevel; chmod +x /sbin/runlevel
      - name: Emit non-zero exit code also on warnings
        run: echo 'APT::Update::Error-Mode "any";' > /etc/apt/apt.conf.d/non-zero-exit-on-warnings
      - name: Run 'apt update'
        run: |
             apt update -qq
             apt install -y libcurl4 curl easy-rsa
      - name: Create self-signed cert with easyrsa
        run: |
             CUR_DIR="$(pwd)"
             make-cadir "${CUR_DIR}/pki-ca"
             cd pki-ca
             ./easyrsa init-pki
             ./easyrsa --batch build-ca nopass
             ./easyrsa --batch build-server-full mariadb-server nopass
             ./easyrsa --batch build-serverClient-full mariadb-client1 nopass
             ./easyrsa --batch build-serverClient-full mariadb-client2 nopass
             mkdir -p /etc/ssl/mariadb
             cp pki/ca.crt /etc/ssl/mariadb/mariadb-ca.pem
             cp pki/issued/mariadb-server.crt /etc/ssl/mariadb/mariadb-ssl.crt
             cp pki/private/mariadb-server.key /etc/ssl/mariadb/mariadb-ssl.key
             cp pki/issued/mariadb-client*.crt /etc/ssl/mariadb/
             cp pki/private/mariadb-client*.key /etc/ssl/mariadb/
             chmod a+r /etc/ssl/mariadb/*
      - name: Create encrypting keys
        run: |
             cd /etc/ssl/mariadb/
             (echo -n "1;"; openssl rand -hex 32) > /etc/ssl/mariadb/mariadb-keyfile.plain
             openssl rand -hex 128 > /etc/ssl/mariadb/mariadb-pass.keyfile
             openssl enc -aes-256-cbc -md sha1 -pass file:/etc/ssl/mariadb/mariadb-pass.keyfile -in /etc/ssl/mariadb/mariadb-keyfile.plain -out /etc/ssl/mariadb/mariadb-keyfile.encrypted
      - name: Copy configs to /etc/mysql
        run: |
             mkdir /etc/mysql
             cp -a etc/mariadb-config/*.d /etc/mysql
      - name: Install package '${{ inputs.mariadb_server }}'
        run: apt install -y ${{ inputs.mariadb_server }}
      - name: Add include /etc/mysql/general.d/ dir to my.cnf
        run: |
             echo "!includedir /etc/mysql/general.d/" >> /etc/mysql/my.cnf
             echo "!includedir /etc/mysql/replication.d/" >> /etc/mysql/my.cnf
             echo "!includedir /etc/mysql/ssl.d/" >> /etc/mysql/my.cnf
             echo "!includedir /etc/mysql/encrypt.d/" >> /etc/mysql/my.cnf
      - name: Reload MariaDB server
        run: /etc/init.d/mariadb restart
      - name: Check that InnoDB variables are applied
        run: cat test/innodb-variables.sql | mariadb
      - name: Check that MariaDB system variables are applied
        run: cat test/system-variables.sql | mariadb
      - name: Check that MariaDB strict variables are applied
        run: cat test/strict-variables.sql | mariadb
      - name: Check that MariaDB logbin variables are applied
        run: cat test/logbin-variables.sql | mariadb
      - name: Check MariaDB location
        run: find /var/lib/mysql
